/*
 * Amadeus Travel Innovation Sandbox
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Amount;
import io.swagger.client.model.Image;
import io.swagger.client.model.Rate;
import io.swagger.client.model.VehicleInfo;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Vehicle
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-24T09:42:17.291Z")
public class Vehicle {
  @SerializedName("vehicle_info")
  private VehicleInfo vehicleInfo = null;

  @SerializedName("rates")
  private List<Rate> rates = null;

  @SerializedName("estimated_total")
  private Amount estimatedTotal = null;

  @SerializedName("images")
  private List<Image> images = null;

  public Vehicle vehicleInfo(VehicleInfo vehicleInfo) {
    this.vehicleInfo = vehicleInfo;
    return this;
  }

   /**
   * More information about the type of vehicle on offer.
   * @return vehicleInfo
  **/
  @ApiModelProperty(required = true, value = "More information about the type of vehicle on offer.")
  public VehicleInfo getVehicleInfo() {
    return vehicleInfo;
  }

  public void setVehicleInfo(VehicleInfo vehicleInfo) {
    this.vehicleInfo = vehicleInfo;
  }

  public Vehicle rates(List<Rate> rates) {
    this.rates = rates;
    return this;
  }

  public Vehicle addRatesItem(Rate ratesItem) {
    if (this.rates == null) {
      this.rates = new ArrayList<Rate>();
    }
    this.rates.add(ratesItem);
    return this;
  }

   /**
   * Rates that will be applied during the duration of the car rental requested. These rates are generally not inclusive of tax and are used by the car rental company to compute the total cost at the end of the rental period.
   * @return rates
  **/
  @ApiModelProperty(value = "Rates that will be applied during the duration of the car rental requested. These rates are generally not inclusive of tax and are used by the car rental company to compute the total cost at the end of the rental period.")
  public List<Rate> getRates() {
    return rates;
  }

  public void setRates(List<Rate> rates) {
    this.rates = rates;
  }

  public Vehicle estimatedTotal(Amount estimatedTotal) {
    this.estimatedTotal = estimatedTotal;
    return this;
  }

   /**
   * The estimated total cost of the rental given the rental period and location provided, including all mandatory taxes and charges, and using a default set of rental options and restrictions defined by the car company.
   * @return estimatedTotal
  **/
  @ApiModelProperty(value = "The estimated total cost of the rental given the rental period and location provided, including all mandatory taxes and charges, and using a default set of rental options and restrictions defined by the car company.")
  public Amount getEstimatedTotal() {
    return estimatedTotal;
  }

  public void setEstimatedTotal(Amount estimatedTotal) {
    this.estimatedTotal = estimatedTotal;
  }

  public Vehicle images(List<Image> images) {
    this.images = images;
    return this;
  }

  public Vehicle addImagesItem(Image imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<Image>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * An image to give an indication of what to expect when renting this vehicle.
   * @return images
  **/
  @ApiModelProperty(value = "An image to give an indication of what to expect when renting this vehicle.")
  public List<Image> getImages() {
    return images;
  }

  public void setImages(List<Image> images) {
    this.images = images;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vehicle vehicle = (Vehicle) o;
    return Objects.equals(this.vehicleInfo, vehicle.vehicleInfo) &&
        Objects.equals(this.rates, vehicle.rates) &&
        Objects.equals(this.estimatedTotal, vehicle.estimatedTotal) &&
        Objects.equals(this.images, vehicle.images);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vehicleInfo, rates, estimatedTotal, images);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vehicle {\n");
    
    sb.append("    vehicleInfo: ").append(toIndentedString(vehicleInfo)).append("\n");
    sb.append("    rates: ").append(toIndentedString(rates)).append("\n");
    sb.append("    estimatedTotal: ").append(toIndentedString(estimatedTotal)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

