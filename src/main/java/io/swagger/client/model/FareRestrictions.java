/*
 * Amadeus Travel Innovation Sandbox
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * FareRestrictions
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-24T09:42:17.291Z")
public class FareRestrictions {
  @SerializedName("refundable")
  private Boolean refundable = null;

  @SerializedName("change_penalties")
  private Boolean changePenalties = null;

  public FareRestrictions refundable(Boolean refundable) {
    this.refundable = refundable;
    return this;
  }

   /**
   * Indicates whether this fare is refundable under some circumstances. Note that a refund charge or penalty may apply
   * @return refundable
  **/
  @ApiModelProperty(required = true, value = "Indicates whether this fare is refundable under some circumstances. Note that a refund charge or penalty may apply")
  public Boolean isRefundable() {
    return refundable;
  }

  public void setRefundable(Boolean refundable) {
    this.refundable = refundable;
  }

  public FareRestrictions changePenalties(Boolean changePenalties) {
    this.changePenalties = changePenalties;
    return this;
  }

   /**
   * Indicates whether this fare allows the itinerary to be changed under some circumstances. Note that a change fee or penalty may apply
   * @return changePenalties
  **/
  @ApiModelProperty(required = true, value = "Indicates whether this fare allows the itinerary to be changed under some circumstances. Note that a change fee or penalty may apply")
  public Boolean isChangePenalties() {
    return changePenalties;
  }

  public void setChangePenalties(Boolean changePenalties) {
    this.changePenalties = changePenalties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FareRestrictions fareRestrictions = (FareRestrictions) o;
    return Objects.equals(this.refundable, fareRestrictions.refundable) &&
        Objects.equals(this.changePenalties, fareRestrictions.changePenalties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(refundable, changePenalties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FareRestrictions {\n");
    
    sb.append("    refundable: ").append(toIndentedString(refundable)).append("\n");
    sb.append("    changePenalties: ").append(toIndentedString(changePenalties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

