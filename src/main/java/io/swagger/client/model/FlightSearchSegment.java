/*
 * Amadeus Travel Innovation Sandbox
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Airport;
import io.swagger.client.model.FlightSearchBookingInfo;
import java.io.IOException;

/**
 * FlightSearchSegment
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-24T09:42:17.291Z")
public class FlightSearchSegment {
  @SerializedName("departs_at")
  private String departsAt = null;

  @SerializedName("arrives_at")
  private String arrivesAt = null;

  @SerializedName("origin")
  private Airport origin = null;

  @SerializedName("destination")
  private Airport destination = null;

  @SerializedName("marketing_airline")
  private String marketingAirline = null;

  @SerializedName("operating_airline")
  private String operatingAirline = null;

  @SerializedName("flight_number")
  private String flightNumber = null;

  @SerializedName("aircraft")
  private String aircraft = null;

  @SerializedName("booking_info")
  private FlightSearchBookingInfo bookingInfo = null;

  public FlightSearchSegment departsAt(String departsAt) {
    this.departsAt = departsAt;
    return this;
  }

   /**
   * Date and time of departure at the origin, in &lt;a href&#x3D;\&quot;https://en.wikipedia.org/wiki/ISO_8601\&quot;&gt;ISO 8601&lt;/a&gt;  date format yyyy-MM-ddTHH:mm in the local time at the origin airport
   * @return departsAt
  **/
  @ApiModelProperty(required = true, value = "Date and time of departure at the origin, in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a>  date format yyyy-MM-ddTHH:mm in the local time at the origin airport")
  public String getDepartsAt() {
    return departsAt;
  }

  public void setDepartsAt(String departsAt) {
    this.departsAt = departsAt;
  }

  public FlightSearchSegment arrivesAt(String arrivesAt) {
    this.arrivesAt = arrivesAt;
    return this;
  }

   /**
   * Date and time of departure at the destination, in &lt;a href&#x3D;\&quot;https://en.wikipedia.org/wiki/ISO_8601\&quot;&gt;ISO 8601&lt;/a&gt;  date format yyyy-MM-ddTHH:mm in the local time at the destination airport
   * @return arrivesAt
  **/
  @ApiModelProperty(required = true, value = "Date and time of departure at the destination, in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a>  date format yyyy-MM-ddTHH:mm in the local time at the destination airport")
  public String getArrivesAt() {
    return arrivesAt;
  }

  public void setArrivesAt(String arrivesAt) {
    this.arrivesAt = arrivesAt;
  }

  public FlightSearchSegment origin(Airport origin) {
    this.origin = origin;
    return this;
  }

   /**
   * Information on the origin airport, from which this flight departs
   * @return origin
  **/
  @ApiModelProperty(required = true, value = "Information on the origin airport, from which this flight departs")
  public Airport getOrigin() {
    return origin;
  }

  public void setOrigin(Airport origin) {
    this.origin = origin;
  }

  public FlightSearchSegment destination(Airport destination) {
    this.destination = destination;
    return this;
  }

   /**
   * Information on the destination airport, at which this flight arrives
   * @return destination
  **/
  @ApiModelProperty(required = true, value = "Information on the destination airport, at which this flight arrives")
  public Airport getDestination() {
    return destination;
  }

  public void setDestination(Airport destination) {
    this.destination = destination;
  }

  public FlightSearchSegment marketingAirline(String marketingAirline) {
    this.marketingAirline = marketingAirline;
    return this;
  }

   /**
   * The 2 character alphanumeric &lt;a href&#x3D;\&quot;https://en.wikipedia.org/wiki/Airline_codes\&quot;&gt;IATA airline code&lt;/a&gt; of the airline that is responsible for the traveller this flight
   * @return marketingAirline
  **/
  @ApiModelProperty(required = true, value = "The 2 character alphanumeric <a href=\"https://en.wikipedia.org/wiki/Airline_codes\">IATA airline code</a> of the airline that is responsible for the traveller this flight")
  public String getMarketingAirline() {
    return marketingAirline;
  }

  public void setMarketingAirline(String marketingAirline) {
    this.marketingAirline = marketingAirline;
  }

  public FlightSearchSegment operatingAirline(String operatingAirline) {
    this.operatingAirline = operatingAirline;
    return this;
  }

   /**
   * The 2 character alphanumeric &lt;a href&#x3D;\&quot;https://en.wikipedia.org/wiki/Airline_codes\&quot;&gt;IATA airline code&lt;/a&gt; of the airline that is providing the aircraft for this flight. Note that in the USA, if the marketing and operating carrier are different, you are legally required to display this in your application.
   * @return operatingAirline
  **/
  @ApiModelProperty(required = true, value = "The 2 character alphanumeric <a href=\"https://en.wikipedia.org/wiki/Airline_codes\">IATA airline code</a> of the airline that is providing the aircraft for this flight. Note that in the USA, if the marketing and operating carrier are different, you are legally required to display this in your application.")
  public String getOperatingAirline() {
    return operatingAirline;
  }

  public void setOperatingAirline(String operatingAirline) {
    this.operatingAirline = operatingAirline;
  }

  public FlightSearchSegment flightNumber(String flightNumber) {
    this.flightNumber = flightNumber;
    return this;
  }

   /**
   * The identifier that the airline uses for this flight route. This is most commonly - but not always - a number. When combined with the airline and date, it identifies an individual aircraft&#39;s flight
   * @return flightNumber
  **/
  @ApiModelProperty(required = true, value = "The identifier that the airline uses for this flight route. This is most commonly - but not always - a number. When combined with the airline and date, it identifies an individual aircraft's flight")
  public String getFlightNumber() {
    return flightNumber;
  }

  public void setFlightNumber(String flightNumber) {
    this.flightNumber = flightNumber;
  }

  public FlightSearchSegment aircraft(String aircraft) {
    this.aircraft = aircraft;
    return this;
  }

   /**
   * The &lt;a href&#x3D;\&quot;http://www.jacanaent.com/JacTechLib/07Aviation/AircraftTypeCodes.txt\&quot;&gt;IATA aircraft type designator&lt;/a&gt; of aircraft that will be used for this flight
   * @return aircraft
  **/
  @ApiModelProperty(value = "The <a href=\"http://www.jacanaent.com/JacTechLib/07Aviation/AircraftTypeCodes.txt\">IATA aircraft type designator</a> of aircraft that will be used for this flight")
  public String getAircraft() {
    return aircraft;
  }

  public void setAircraft(String aircraft) {
    this.aircraft = aircraft;
  }

  public FlightSearchSegment bookingInfo(FlightSearchBookingInfo bookingInfo) {
    this.bookingInfo = bookingInfo;
    return this;
  }

   /**
   * A booking information object with additional details about how the quality of this flight at the given price.
   * @return bookingInfo
  **/
  @ApiModelProperty(required = true, value = "A booking information object with additional details about how the quality of this flight at the given price.")
  public FlightSearchBookingInfo getBookingInfo() {
    return bookingInfo;
  }

  public void setBookingInfo(FlightSearchBookingInfo bookingInfo) {
    this.bookingInfo = bookingInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlightSearchSegment flightSearchSegment = (FlightSearchSegment) o;
    return Objects.equals(this.departsAt, flightSearchSegment.departsAt) &&
        Objects.equals(this.arrivesAt, flightSearchSegment.arrivesAt) &&
        Objects.equals(this.origin, flightSearchSegment.origin) &&
        Objects.equals(this.destination, flightSearchSegment.destination) &&
        Objects.equals(this.marketingAirline, flightSearchSegment.marketingAirline) &&
        Objects.equals(this.operatingAirline, flightSearchSegment.operatingAirline) &&
        Objects.equals(this.flightNumber, flightSearchSegment.flightNumber) &&
        Objects.equals(this.aircraft, flightSearchSegment.aircraft) &&
        Objects.equals(this.bookingInfo, flightSearchSegment.bookingInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(departsAt, arrivesAt, origin, destination, marketingAirline, operatingAirline, flightNumber, aircraft, bookingInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlightSearchSegment {\n");
    
    sb.append("    departsAt: ").append(toIndentedString(departsAt)).append("\n");
    sb.append("    arrivesAt: ").append(toIndentedString(arrivesAt)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    marketingAirline: ").append(toIndentedString(marketingAirline)).append("\n");
    sb.append("    operatingAirline: ").append(toIndentedString(operatingAirline)).append("\n");
    sb.append("    flightNumber: ").append(toIndentedString(flightNumber)).append("\n");
    sb.append("    aircraft: ").append(toIndentedString(aircraft)).append("\n");
    sb.append("    bookingInfo: ").append(toIndentedString(bookingInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

