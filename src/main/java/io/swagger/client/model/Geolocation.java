/*
 * Amadeus Travel Innovation Sandbox
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * An object to describe the coordinates of a map location
 */
@ApiModel(description = "An object to describe the coordinates of a map location")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-24T09:42:17.291Z")
public class Geolocation {
  @SerializedName("latitude")
  private BigDecimal latitude = null;

  @SerializedName("longitude")
  private BigDecimal longitude = null;

  @SerializedName("google_maps_link")
  private String googleMapsLink = null;

  public Geolocation latitude(BigDecimal latitude) {
    this.latitude = latitude;
    return this;
  }

   /**
   * The north-south coordinate of this location, in decimal degrees, between -90 and 90
   * @return latitude
  **/
  @ApiModelProperty(required = true, value = "The north-south coordinate of this location, in decimal degrees, between -90 and 90")
  public BigDecimal getLatitude() {
    return latitude;
  }

  public void setLatitude(BigDecimal latitude) {
    this.latitude = latitude;
  }

  public Geolocation longitude(BigDecimal longitude) {
    this.longitude = longitude;
    return this;
  }

   /**
   * The east-west coordinate of this location, in decimal degrees, between -180 and 180
   * @return longitude
  **/
  @ApiModelProperty(required = true, value = "The east-west coordinate of this location, in decimal degrees, between -180 and 180")
  public BigDecimal getLongitude() {
    return longitude;
  }

  public void setLongitude(BigDecimal longitude) {
    this.longitude = longitude;
  }

  public Geolocation googleMapsLink(String googleMapsLink) {
    this.googleMapsLink = googleMapsLink;
    return this;
  }

   /**
   * For YapQ APIs only  - a link to a google map rendering of this location.
   * @return googleMapsLink
  **/
  @ApiModelProperty(value = "For YapQ APIs only  - a link to a google map rendering of this location.")
  public String getGoogleMapsLink() {
    return googleMapsLink;
  }

  public void setGoogleMapsLink(String googleMapsLink) {
    this.googleMapsLink = googleMapsLink;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Geolocation geolocation = (Geolocation) o;
    return Objects.equals(this.latitude, geolocation.latitude) &&
        Objects.equals(this.longitude, geolocation.longitude) &&
        Objects.equals(this.googleMapsLink, geolocation.googleMapsLink);
  }

  @Override
  public int hashCode() {
    return Objects.hash(latitude, longitude, googleMapsLink);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Geolocation {\n");
    
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    googleMapsLink: ").append(toIndentedString(googleMapsLink)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

